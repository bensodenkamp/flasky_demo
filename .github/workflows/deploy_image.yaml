on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
env:
  ECS_SERVICE: flasky_demo-service
  ECS_CLUSTER: flasky-cluster
  ECS_TASK_DEFINITION: ecs_task_def.json
  CONTAINER_NAME: flasky_demo

jobs:
  validate:
    uses: ./.github/workflows/validate.yaml
  
  deploy:
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::689030005997:role/github-actions-flasky-deployment
        aws-region: us-west-2
  
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: 689030005997.dkr.ecr.us-west-2.amazonaws.com/flasky-repo
        tags: |
          type=semver,pattern={{major}}.{{minor}}.{{patch}}
          type=ref,event=branch

    - name: Build and push Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: flasky-repo
      uses: docker/build-push-action@v4
      with:
        context: ./app
        push: true
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
      
    - name: Store Image
      run: echo "image=689030005997.dkr.ecr.us-west-2.amazonaws.com/flasky-repo:flasky_demo" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.imageid }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
    

    


